// Generated from src/parser/Cmm.g4 by ANTLR 4.7
package parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CmmLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, ID=41, CHAR_CONSTANT=42, INT_CONSTANT=43, REAL_CONSTANT=44, 
		LINE_COMMENT=45, MULTI_LINE_COMMENT=46, WHITE_SPACES=47;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "ID", "CHAR_CONSTANT", 
		"INT_CONSTANT", "REAL_CONSTANT", "LINE_COMMENT", "MULTI_LINE_COMMENT", 
		"WHITE_SPACES", "DIGIT", "FLOAT"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'('", "')'", "'{'", "'}'", "'void'", "'main'", "','", "';'", "'int'", 
		"'double'", "'char'", "'['", "']'", "'struct'", "'*'", "'while'", "'return'", 
		"'write'", "'read'", "'for'", "'break'", "'continue'", "'='", "'if'", 
		"'else'", "'.'", "'&'", "'/'", "'%'", "'+'", "'-'", "'!'", "'=='", "'!='", 
		"'<='", "'>='", "'<'", "'>'", "'&&'", "'||'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, "ID", "CHAR_CONSTANT", "INT_CONSTANT", "REAL_CONSTANT", 
		"LINE_COMMENT", "MULTI_LINE_COMMENT", "WHITE_SPACES"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CmmLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Cmm.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\61\u015b\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\3\2\3\2\3\3\3"+
		"\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\t"+
		"\3\t\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3"+
		"\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20"+
		"\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23"+
		"\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\34"+
		"\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3\"\3#\3#\3#\3"+
		"$\3$\3$\3%\3%\3%\3&\3&\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\6*\u00f3\n*\r*\16"+
		"*\u00f4\3*\7*\u00f8\n*\f*\16*\u00fb\13*\3+\3+\3+\3+\3+\3+\3+\3+\5+\u0105"+
		"\n+\3+\3+\3,\3,\6,\u010b\n,\r,\16,\u010c\3,\7,\u0110\n,\f,\16,\u0113\13"+
		",\5,\u0115\n,\3-\3-\3-\3-\5-\u011b\n-\3-\3-\3-\3-\3-\5-\u0122\n-\3-\3"+
		"-\5-\u0126\n-\3.\3.\3.\3.\7.\u012c\n.\f.\16.\u012f\13.\3.\5.\u0132\n."+
		"\3.\5.\u0135\n.\3.\3.\3/\3/\3/\3/\7/\u013d\n/\f/\16/\u0140\13/\3/\3/\3"+
		"/\3/\3/\3\60\6\60\u0148\n\60\r\60\16\60\u0149\3\60\3\60\3\61\3\61\3\62"+
		"\5\62\u0151\n\62\3\62\3\62\3\62\3\62\3\62\5\62\u0158\n\62\5\62\u015a\n"+
		"\62\4\u012d\u013e\2\63\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27"+
		"\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\2c\2\3"+
		"\2\t\5\2C\\aac|\6\2\62;C\\aac|\3\2\63;\4\2GGgg\3\3\f\f\5\2\13\f\17\17"+
		"\"\"\3\2\62;\2\u016b\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2"+
		"\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3"+
		"\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2"+
		"\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2"+
		"\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2"+
		"\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2"+
		"\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q"+
		"\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2"+
		"\2\2\2_\3\2\2\2\3e\3\2\2\2\5g\3\2\2\2\7i\3\2\2\2\tk\3\2\2\2\13m\3\2\2"+
		"\2\rr\3\2\2\2\17w\3\2\2\2\21y\3\2\2\2\23{\3\2\2\2\25\177\3\2\2\2\27\u0086"+
		"\3\2\2\2\31\u008b\3\2\2\2\33\u008d\3\2\2\2\35\u008f\3\2\2\2\37\u0096\3"+
		"\2\2\2!\u0098\3\2\2\2#\u009e\3\2\2\2%\u00a5\3\2\2\2\'\u00ab\3\2\2\2)\u00b0"+
		"\3\2\2\2+\u00b4\3\2\2\2-\u00ba\3\2\2\2/\u00c3\3\2\2\2\61\u00c5\3\2\2\2"+
		"\63\u00c8\3\2\2\2\65\u00cd\3\2\2\2\67\u00cf\3\2\2\29\u00d1\3\2\2\2;\u00d3"+
		"\3\2\2\2=\u00d5\3\2\2\2?\u00d7\3\2\2\2A\u00d9\3\2\2\2C\u00db\3\2\2\2E"+
		"\u00de\3\2\2\2G\u00e1\3\2\2\2I\u00e4\3\2\2\2K\u00e7\3\2\2\2M\u00e9\3\2"+
		"\2\2O\u00eb\3\2\2\2Q\u00ee\3\2\2\2S\u00f2\3\2\2\2U\u00fc\3\2\2\2W\u0114"+
		"\3\2\2\2Y\u0125\3\2\2\2[\u0127\3\2\2\2]\u0138\3\2\2\2_\u0147\3\2\2\2a"+
		"\u014d\3\2\2\2c\u0159\3\2\2\2ef\7*\2\2f\4\3\2\2\2gh\7+\2\2h\6\3\2\2\2"+
		"ij\7}\2\2j\b\3\2\2\2kl\7\177\2\2l\n\3\2\2\2mn\7x\2\2no\7q\2\2op\7k\2\2"+
		"pq\7f\2\2q\f\3\2\2\2rs\7o\2\2st\7c\2\2tu\7k\2\2uv\7p\2\2v\16\3\2\2\2w"+
		"x\7.\2\2x\20\3\2\2\2yz\7=\2\2z\22\3\2\2\2{|\7k\2\2|}\7p\2\2}~\7v\2\2~"+
		"\24\3\2\2\2\177\u0080\7f\2\2\u0080\u0081\7q\2\2\u0081\u0082\7w\2\2\u0082"+
		"\u0083\7d\2\2\u0083\u0084\7n\2\2\u0084\u0085\7g\2\2\u0085\26\3\2\2\2\u0086"+
		"\u0087\7e\2\2\u0087\u0088\7j\2\2\u0088\u0089\7c\2\2\u0089\u008a\7t\2\2"+
		"\u008a\30\3\2\2\2\u008b\u008c\7]\2\2\u008c\32\3\2\2\2\u008d\u008e\7_\2"+
		"\2\u008e\34\3\2\2\2\u008f\u0090\7u\2\2\u0090\u0091\7v\2\2\u0091\u0092"+
		"\7t\2\2\u0092\u0093\7w\2\2\u0093\u0094\7e\2\2\u0094\u0095\7v\2\2\u0095"+
		"\36\3\2\2\2\u0096\u0097\7,\2\2\u0097 \3\2\2\2\u0098\u0099\7y\2\2\u0099"+
		"\u009a\7j\2\2\u009a\u009b\7k\2\2\u009b\u009c\7n\2\2\u009c\u009d\7g\2\2"+
		"\u009d\"\3\2\2\2\u009e\u009f\7t\2\2\u009f\u00a0\7g\2\2\u00a0\u00a1\7v"+
		"\2\2\u00a1\u00a2\7w\2\2\u00a2\u00a3\7t\2\2\u00a3\u00a4\7p\2\2\u00a4$\3"+
		"\2\2\2\u00a5\u00a6\7y\2\2\u00a6\u00a7\7t\2\2\u00a7\u00a8\7k\2\2\u00a8"+
		"\u00a9\7v\2\2\u00a9\u00aa\7g\2\2\u00aa&\3\2\2\2\u00ab\u00ac\7t\2\2\u00ac"+
		"\u00ad\7g\2\2\u00ad\u00ae\7c\2\2\u00ae\u00af\7f\2\2\u00af(\3\2\2\2\u00b0"+
		"\u00b1\7h\2\2\u00b1\u00b2\7q\2\2\u00b2\u00b3\7t\2\2\u00b3*\3\2\2\2\u00b4"+
		"\u00b5\7d\2\2\u00b5\u00b6\7t\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8\7c\2\2"+
		"\u00b8\u00b9\7m\2\2\u00b9,\3\2\2\2\u00ba\u00bb\7e\2\2\u00bb\u00bc\7q\2"+
		"\2\u00bc\u00bd\7p\2\2\u00bd\u00be\7v\2\2\u00be\u00bf\7k\2\2\u00bf\u00c0"+
		"\7p\2\2\u00c0\u00c1\7w\2\2\u00c1\u00c2\7g\2\2\u00c2.\3\2\2\2\u00c3\u00c4"+
		"\7?\2\2\u00c4\60\3\2\2\2\u00c5\u00c6\7k\2\2\u00c6\u00c7\7h\2\2\u00c7\62"+
		"\3\2\2\2\u00c8\u00c9\7g\2\2\u00c9\u00ca\7n\2\2\u00ca\u00cb\7u\2\2\u00cb"+
		"\u00cc\7g\2\2\u00cc\64\3\2\2\2\u00cd\u00ce\7\60\2\2\u00ce\66\3\2\2\2\u00cf"+
		"\u00d0\7(\2\2\u00d08\3\2\2\2\u00d1\u00d2\7\61\2\2\u00d2:\3\2\2\2\u00d3"+
		"\u00d4\7\'\2\2\u00d4<\3\2\2\2\u00d5\u00d6\7-\2\2\u00d6>\3\2\2\2\u00d7"+
		"\u00d8\7/\2\2\u00d8@\3\2\2\2\u00d9\u00da\7#\2\2\u00daB\3\2\2\2\u00db\u00dc"+
		"\7?\2\2\u00dc\u00dd\7?\2\2\u00ddD\3\2\2\2\u00de\u00df\7#\2\2\u00df\u00e0"+
		"\7?\2\2\u00e0F\3\2\2\2\u00e1\u00e2\7>\2\2\u00e2\u00e3\7?\2\2\u00e3H\3"+
		"\2\2\2\u00e4\u00e5\7@\2\2\u00e5\u00e6\7?\2\2\u00e6J\3\2\2\2\u00e7\u00e8"+
		"\7>\2\2\u00e8L\3\2\2\2\u00e9\u00ea\7@\2\2\u00eaN\3\2\2\2\u00eb\u00ec\7"+
		"(\2\2\u00ec\u00ed\7(\2\2\u00edP\3\2\2\2\u00ee\u00ef\7~\2\2\u00ef\u00f0"+
		"\7~\2\2\u00f0R\3\2\2\2\u00f1\u00f3\t\2\2\2\u00f2\u00f1\3\2\2\2\u00f3\u00f4"+
		"\3\2\2\2\u00f4\u00f2\3\2\2\2\u00f4\u00f5\3\2\2\2\u00f5\u00f9\3\2\2\2\u00f6"+
		"\u00f8\t\3\2\2\u00f7\u00f6\3\2\2\2\u00f8\u00fb\3\2\2\2\u00f9\u00f7\3\2"+
		"\2\2\u00f9\u00fa\3\2\2\2\u00faT\3\2\2\2\u00fb\u00f9\3\2\2\2\u00fc\u0104"+
		"\7)\2\2\u00fd\u0105\13\2\2\2\u00fe\u00ff\7^\2\2\u00ff\u0105\7v\2\2\u0100"+
		"\u0101\7^\2\2\u0101\u0105\7p\2\2\u0102\u0103\7^\2\2\u0103\u0105\5W,\2"+
		"\u0104\u00fd\3\2\2\2\u0104\u00fe\3\2\2\2\u0104\u0100\3\2\2\2\u0104\u0102"+
		"\3\2\2\2\u0105\u0106\3\2\2\2\u0106\u0107\7)\2\2\u0107V\3\2\2\2\u0108\u0115"+
		"\7\62\2\2\u0109\u010b\t\4\2\2\u010a\u0109\3\2\2\2\u010b\u010c\3\2\2\2"+
		"\u010c\u010a\3\2\2\2\u010c\u010d\3\2\2\2\u010d\u0111\3\2\2\2\u010e\u0110"+
		"\5a\61\2\u010f\u010e\3\2\2\2\u0110\u0113\3\2\2\2\u0111\u010f\3\2\2\2\u0111"+
		"\u0112\3\2\2\2\u0112\u0115\3\2\2\2\u0113\u0111\3\2\2\2\u0114\u0108\3\2"+
		"\2\2\u0114\u010a\3\2\2\2\u0115X\3\2\2\2\u0116\u0126\5c\62\2\u0117\u0118"+
		"\5c\62\2\u0118\u011a\t\5\2\2\u0119\u011b\7/\2\2\u011a\u0119\3\2\2\2\u011a"+
		"\u011b\3\2\2\2\u011b\u011c\3\2\2\2\u011c\u011d\5W,\2\u011d\u0126\3\2\2"+
		"\2\u011e\u011f\5W,\2\u011f\u0121\t\5\2\2\u0120\u0122\7/\2\2\u0121\u0120"+
		"\3\2\2\2\u0121\u0122\3\2\2\2\u0122\u0123\3\2\2\2\u0123\u0124\5W,\2\u0124"+
		"\u0126\3\2\2\2\u0125\u0116\3\2\2\2\u0125\u0117\3\2\2\2\u0125\u011e\3\2"+
		"\2\2\u0126Z\3\2\2\2\u0127\u0128\7\61\2\2\u0128\u0129\7\61\2\2\u0129\u012d"+
		"\3\2\2\2\u012a\u012c\13\2\2\2\u012b\u012a\3\2\2\2\u012c\u012f\3\2\2\2"+
		"\u012d\u012e\3\2\2\2\u012d\u012b\3\2\2\2\u012e\u0131\3\2\2\2\u012f\u012d"+
		"\3\2\2\2\u0130\u0132\7\17\2\2\u0131\u0130\3\2\2\2\u0131\u0132\3\2\2\2"+
		"\u0132\u0134\3\2\2\2\u0133\u0135\t\6\2\2\u0134\u0133\3\2\2\2\u0135\u0136"+
		"\3\2\2\2\u0136\u0137\b.\2\2\u0137\\\3\2\2\2\u0138\u0139\7\61\2\2\u0139"+
		"\u013a\7,\2\2\u013a\u013e\3\2\2\2\u013b\u013d\13\2\2\2\u013c\u013b\3\2"+
		"\2\2\u013d\u0140\3\2\2\2\u013e\u013f\3\2\2\2\u013e\u013c\3\2\2\2\u013f"+
		"\u0141\3\2\2\2\u0140\u013e\3\2\2\2\u0141\u0142\7,\2\2\u0142\u0143\7\61"+
		"\2\2\u0143\u0144\3\2\2\2\u0144\u0145\b/\2\2\u0145^\3\2\2\2\u0146\u0148"+
		"\t\7\2\2\u0147\u0146\3\2\2\2\u0148\u0149\3\2\2\2\u0149\u0147\3\2\2\2\u0149"+
		"\u014a\3\2\2\2\u014a\u014b\3\2\2\2\u014b\u014c\b\60\2\2\u014c`\3\2\2\2"+
		"\u014d\u014e\t\b\2\2\u014eb\3\2\2\2\u014f\u0151\5W,\2\u0150\u014f\3\2"+
		"\2\2\u0150\u0151\3\2\2\2\u0151\u0152\3\2\2\2\u0152\u0153\7\60\2\2\u0153"+
		"\u015a\5W,\2\u0154\u0155\5W,\2\u0155\u0157\7\60\2\2\u0156\u0158\5W,\2"+
		"\u0157\u0156\3\2\2\2\u0157\u0158\3\2\2\2\u0158\u015a\3\2\2\2\u0159\u0150"+
		"\3\2\2\2\u0159\u0154\3\2\2\2\u015ad\3\2\2\2\24\2\u00f4\u00f9\u0104\u010c"+
		"\u0111\u0114\u011a\u0121\u0125\u012d\u0131\u0134\u013e\u0149\u0150\u0157"+
		"\u0159\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}